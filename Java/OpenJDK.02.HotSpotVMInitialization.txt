
Reference

1. Flowchart of launcher execs and options processing on unix
http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/4fa603c72f2f/src/solaris/bin/java_md_solinux.c#l77

2. HotSpot JVM 的启动过程做了什么？
https://www.zhihu.com/question/32247563

3. JVM-系统初始化
http://blog.csdn.net/dviewer/article/details/77972338
系统初始化入口是JNI_CreateJavaVM函数，位于/hotspot/src/share/vm/prims/jni.cpp中，hotspot代码中的prims模块里面定义的就是一些外部接口，供JDK或者其他应用程序调用。为了加深印象，我们先复习下JNI_CreateJavaVM函数是怎么来的。入口main函数中创建了运行JavaMain的主线程，在主线程中会调用InitializeJVM来对虚拟机进行初始化，InitializeJVM中通过InvocationFunctions结构体中的函数指针来调用CreateJavaVM，这个CreateJavaVM是通过dlsym(libjvm, "JNI_CreateJavaVM")获取到的。

4. JVM启动分析
http://www.txazo.com/jvm/jvm-startup.html
通过openjdk的源码来分析jvm的启动过程，针对linux系统。

jvm的启动入口main():
JLI_Launch()方法:
InitLauncher()方法:
JLI_SetTraceLauncher()方法:

后续会调用JLI_IsTraceLauncher()和JLI_TraceLauncher()方法输出debug信息。
LoadJavaVM()方法:
JVMInit()方法:
ContinueInNewThread()方法: <------------

JavaMain()方法:
InitializeJVM()方法调用前面挂载的CreateJavaVM()方法，也就是JNI_CreateJavaVM()方法。<----------------
sun.launcher.LauncherHelper的checkAndLoadMain()方法检查并加载主类过程:

jvm的启动模式:
jar启动模式: java -jar main.jar
class启动模式: java org.txazo.test.Main
jvm的整体启动流程:

准备工作，包括查找jre、jvm
装载动态链接库
解析jvm参数
启动虚拟机
加载主类，并调用主类的main()方法

5. JVM源码分析之JVM启动流程
https://www.jianshu.com/p/b91258bc08ac

6. Java虚拟机的启动与程序的运行
http://blog.csdn.net/on_1y/article/details/38761549
